
def parse(text):
    """
    Here is what amounts to a simple lisp parser for parsing the server's
    returned messages into an intermediate format that's easier to deal
    with than the raw (often poorly formatted) text.
    """
    
    result = []
    indent = 0
    for c in text:
        if c == "(":
            cur = result
            for i in xrange(indent):
                cur = cur[-1]
            cur.append([])
            
            indent += 1
        elif c == ")":
            indent -= 1
        else:
            cur = result
            for i in xrange(indent):
                cur = cur[-1]
            cur.append(c)
    
    return stringify(result)

def stringify(itemlist):
    """
    Takes a list generated by parsing a message and condenses the
    characters it contains into strings, seperating them by spaces and
    leaving them alongside the lists therin.
    """
    
    result = []
    s = ""
    
    for item in itemlist:
        if item == " ":
            if s != "":
                result.append(s)
                s = ""
        elif type(item) is type(""):
            s += item
        elif type(item) is type([]):
            if s != "":
                result.append(s)
                s = ""
            result.append(stringify(item))
    
    if s != "":
        result.append(s)
    
    return result
    
if __name__ == "__main__":
    with open("client_recv", 'r') as f:
        for line in f:
            parse_message(line.strip())
